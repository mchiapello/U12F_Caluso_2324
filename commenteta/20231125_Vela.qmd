---
title: "Foglio Gara: BCV Caluso - VeLa"
date: 01/20/2023
categories: ['U12F', '2023-2024', 'Primo Campionato', 'Ritorno']
format:
  html:
    toc: false
    theme: journal
    page-layout: article
    number-sections: false
execute:
  echo: false
  message: false
  warning: false
---

```{r}
#| include: false
library(tidyverse)
library(datavolley)
library(gt)
library(gtExtras)
library(patchwork)
library(volleyreport)
library(patchwork)
library(epoxy)
source(paste0(here::here(), "/scripts/999_utils.R"))
# Read data
file <- fs::dir_ls(paste0(here::here(), "/partite/2023-11-25_Vela"), 
                   regexp = "dvw$")
x <- dv_read(file)
noi <- "BCV Caluso"
loro <- teams(x)[teams(x) != noi]
px <- plays(x)

################################################################################
# FUNCTIONS
matchup <- function(x, set){
  plays(x) |> 
  drop_na(team) |> 
  filter(set_number == set) |> 
  slice(1) |> 
  select(matches("home_p[123456]"), matches("visiting_p[123456]")) |> 
   pivot_longer(cols = everything(),
                names_to = "Position",
                values_to = "Player") |> 
  mutate(team = ifelse(grepl("home", Position), x$meta$teams$team[1], x$meta$teams$team[2]), 
         x = case_when(grepl("p1", Position) & team == noi ~ 3,
                       grepl("p2", Position) & team == noi ~ 3,
                       grepl("p3", Position) & team == noi ~ 2,
                       grepl("p4", Position) & team == noi ~ 1,
                       grepl("p5", Position) & team == noi ~ 1,
                       grepl("p6", Position) & team == noi ~ 2,
                       grepl("p1", Position) & team != noi ~ 1,
                       grepl("p2", Position) & team != noi ~ 1,
                       grepl("p3", Position) & team != noi ~ 2,
                       grepl("p4", Position) & team != noi ~ 3,
                       grepl("p5", Position) & team != noi ~ 3,
                       grepl("p6", Position) & team != noi ~ 2),
         y = case_when(grepl("p1", Position) & team == noi ~ 1,
                       grepl("p2", Position) & team == noi ~ 2,
                       grepl("p3", Position) & team == noi ~ 2,
                       grepl("p4", Position) & team == noi ~ 2,
                       grepl("p5", Position) & team == noi ~ 1,
                       grepl("p6", Position) & team == noi ~ 1,
                       grepl("p1", Position) & team != noi ~ 4,
                       grepl("p2", Position) & team != noi ~ 3,
                       grepl("p3", Position) & team != noi ~ 3,
                       grepl("p4", Position) & team != noi ~ 3,
                       grepl("p5", Position) & team != noi ~ 4,
                       grepl("p6", Position) & team != noi ~ 4))
}
```

## Match up

```{r}
#| fig-width: 10
#| fig-height: 4
if(which(x$meta$teams$team == noi) == 1){
    loc <- "home"
  } else {
    loc <- "visiting"
  }
tmp1 <- matchup(x, 1)
tmp2 <- matchup(x, 2)
tmp3 <- matchup(x, 3)

grid_colour <- "black"
p1 <- tmp1 |> 
  ggplot(aes(x, y)) +
  annotate(geom = "rect", xmin = 0.5, xmax = 3.5, 
           ymin = 0.5, ymax = 4.5, 
           fill = "white", 
           colour = "black") +
  annotate(geom = "rect", xmin = 0.3, xmax = 3.7, 
           ymin = 2.48, ymax = 2.6, 
           fill = grid_colour) +
  annotate("segment", x = 1.5, xend = 1.5, y = .5, yend = 4.5,
           colour = grid_colour) +
  annotate("segment", x = 2.5, xend = 2.5, y = .5, yend = 4.5,
           colour = grid_colour) +
  annotate("segment", x = .5, xend = 3.5, y = 1.5, yend = 1.5,
           colour = grid_colour) +
  annotate("segment", x = .5, xend = 3.5, y = 3.5, yend = 3.5,
           colour = grid_colour) +
  geom_text(aes(x, y, label = Player)) +
  labs(title = paste0("SET", 1)) +
  annotate("text", x = 2, y = .4, label = noi) +
  annotate("text", x = 2, y = 4.6, label = loro) +
  geom_point(data = tibble(x = 1, y = 4.5),
             aes(x,y), size = 5) +
  theme_void()
p2 <- tmp2 |> 
  ggplot(aes(x, y)) +
  annotate(geom = "rect", xmin = 0.5, xmax = 3.5, 
           ymin = 0.5, ymax = 4.5, 
           fill = "white", 
           colour = "black") +
  annotate(geom = "rect", xmin = 0.3, xmax = 3.7, 
           ymin = 2.48, ymax = 2.6, 
           fill = grid_colour) +
  annotate("segment", x = 1.5, xend = 1.5, y = .5, yend = 4.5,
           colour = grid_colour) +
  annotate("segment", x = 2.5, xend = 2.5, y = .5, yend = 4.5,
           colour = grid_colour) +
  annotate("segment", x = .5, xend = 3.5, y = 1.5, yend = 1.5,
           colour = grid_colour) +
  annotate("segment", x = .5, xend = 3.5, y = 3.5, yend = 3.5,
           colour = grid_colour) +
  geom_text(aes(x, y, label = Player)) +
  labs(title = paste0("SET", 2)) +
  annotate("text", x = 2, y = .4, label = noi) +
  annotate("text", x = 2, y = 4.6, label = loro) +
  geom_point(data = tibble(x = 3, y = .5),
             aes(x,y), size = 5) +
  theme_void()
p3 <- tmp3 |> 
  ggplot(aes(x, y)) +
  annotate(geom = "rect", xmin = 0.5, xmax = 3.5, 
           ymin = 0.5, ymax = 4.5, 
           fill = "white", 
           colour = "black") +
  annotate(geom = "rect", xmin = 0.3, xmax = 3.7, 
           ymin = 2.48, ymax = 2.6, 
           fill = grid_colour) +
  annotate("segment", x = 1.5, xend = 1.5, y = .5, yend = 4.5,
           colour = grid_colour) +
  annotate("segment", x = 2.5, xend = 2.5, y = .5, yend = 4.5,
           colour = grid_colour) +
  annotate("segment", x = .5, xend = 3.5, y = 1.5, yend = 1.5,
           colour = grid_colour) +
  annotate("segment", x = .5, xend = 3.5, y = 3.5, yend = 3.5,
           colour = grid_colour) +
  geom_text(aes(x, y, label = Player)) +
  labs(title = paste0("SET", 3)) +
  annotate("text", x = 2, y = .4, label = noi) +
  annotate("text", x = 2, y = 4.6, label = loro) +
  geom_point(data = tibble(x = 1, y = 4.5),
             aes(x,y), size = 5) +
  theme_void()
p1 + p2 + p3
```

## Summary

### `r paste0("Team: ", noi)`
```{r}
if(which(x$meta$team$team == noi) == 1){
  t1 <- x$meta$players_h %>% 
      select(number, name, starting_position_set1:starting_position_set5) %>% 
      select(where(~sum(!is.na(.x)) > 0)) %>% 
      rename_with(~str_remove(.x, "starting_position_")) |> 
      filter(if_any(starts_with("set"), ~ . != "-"))
  
  #####################
  # POINTS
  t2 <- vr_points(x, by = "set", team_select = noi)
  t3 <- vr_points(x, by = "player", team_select = noi)
  # SERVE
  t4 <- vr_serve(x, by = "set", team_select = noi)
  t5 <- vr_serve(x, by = "player", team_select = noi)
  # RECEPTION
  t6 <- vr_reception(x, by = "set", team_select = noi)
  t7 <- vr_reception(x, by = "player", team_select = noi)
  # ATTACK
  t8 <- vr_attack(x, by = "set", team_select = noi)
  t9 <- vr_attack(x, by = "player", team_select = noi)
  t10 <- vr_freeball(x, by = "set", team_select = noi)
  t11 <- vr_freeball(x, by = "player", team_select = noi)
  # BLOCK
  t12 <- vr_block(x, by = "set", team_select = noi)
  t13 <- vr_block(x, by = "player", team_select = noi)
  ######################
  # TABLE
  y <- plays(x)
  t1 %>% 
      left_join(y %>% 
                    dplyr::select(player_id, player_name) %>% 
                    filter(!is.na(player_id)) %>% 
                    distinct(), by = c("name" = "player_name"))  %>% 
  bind_rows(tibble(name = "Team total",
                   player_id = "Team total")) |>  
      left_join(t3, by = "player_id") %>% 
      left_join(t5, by = "player_id") %>%
      left_join(t7, by = "player_id") %>%
      left_join(t9, by = "player_id") %>%
      left_join(t11, by = "player_id") %>%
      left_join(t13, by = "player_id") %>%
      select(-player_id) %>% 
      mutate(across(starts_with("set"), ~replace_na(.x, "-"))) %>% 
      mutate(across(where(is.numeric), ~replace_na(.x, 0))) %>% 
      ### GT TABLE
      gt(id = "four") %>%
      # tab_header(
      #   title = paste0(noi)) %>% 
      tab_spanner(
          label = "Punti",
          columns = Tot.x:`W-L`) %>% 
      tab_spanner(
          label = "Battuta",
          columns = Tot.y:Pos) %>% 
      tab_spanner(
          label = "Ricezione",
          columns = Tot.x.x:`(Exc%)`) %>% 
      tab_spanner(
          label = "Attacco",
          columns = Tot.y.y:`Pts%`) %>% 
      tab_spanner(
          label = "Freeball",
          columns = Tot:Err.y.y) %>%
      tab_spanner(
          label = "Muro",
          columns = Punto) %>%
      cols_label(
          Tot.x = html("<strong>Tot</strong>"),
          Nerr = html("<strong>Err</strong>"),
          `W-L` = html("D"),
          Tot.y = html("<strong>Tot</strong>"),
          Err.x = html("<strong>Err</strong>"),
          Pts.x = html("Pts"),
          Tot.x.x = html("<strong>Tot</strong>"),
          Err.y = html("<strong>Err</strong>"),
          Tot.y.y = html("<strong>Tot</strong>"),
          Err.x.x = html("<strong>Err</strong>"),
          Pts.y = html("Pts"),
          Tot = html("<strong>Tot</strong>"),
          Err.y.y = html("<strong>Err</strong>"),
          Punto = html("Pts")) %>% 
      cols_align(
      align = "center") %>% 
      tab_options(table.width = px(700),
                  row.striping.include_table_body = TRUE) %>% 
      tab_style(style = cell_borders(sides = "left",
                                     color = "grey50",
                                     weight = px(.9),
                                     style = "solid"),
                locations = cells_body(columns = starts_with("To"),
                                       rows = everything())) %>% 
      tab_style(style = cell_borders(sides = "left",
                                     color = "grey50",
                                     weight = px(.9),
                                     style = "solid"),
                locations = cells_body(columns = starts_with("set1"),
                                       rows = everything())) %>% 
      tab_style(style = cell_borders(sides = "left",
                                     color = "grey50",
                                     weight = px(.9),
                                     style = "solid"),
                locations = cells_body(columns = last_col(),
                                       rows = everything())) %>% 
      opt_css(
      css = "
      #four .gt_col_heading {
        padding: 2px 3px;
        font-size: 9px;
      }
       #four .gt_column_spanner {
        padding: 0px 0px;
        font-size: 9px;
      }
      #four .gt_row {
        padding: 2px 3px;
        font-size: 9px;
      }
      #four .gt_col_heading {
        text-align: center !important;
      }
      ") 
} else {
    t1 <- x$meta$players_v %>% 
      select(number, name, starting_position_set1:starting_position_set5) %>% 
      select(where(~sum(!is.na(.x)) > 0)) %>% 
      rename_with(~str_remove(.x, "starting_position_")) |> 
      filter(if_any(starts_with("set"), ~ . != "-"))
  
  #####################
  # POINTS
  t2 <- vr_points(x, by = "set", team_select = noi)
  t3 <- vr_points(x, by = "player", team_select = noi)
  # SERVE
  t4 <- vr_serve(x, by = "set", team_select = noi)
  t5 <- vr_serve(x, by = "player", team_select = noi)
  # RECEPTION
  t6 <- vr_reception(x, by = "set", team_select = noi)
  t7 <- vr_reception(x, by = "player", team_select = noi)
  # ATTACK
  t8 <- vr_attack(x, by = "set", team_select = noi)
  t9 <- vr_attack(x, by = "player", team_select = noi)
  t10 <- vr_freeball(x, by = "set", team_select = noi)
  t11 <- vr_freeball(x, by = "player", team_select = noi)
  # BLOCK
  t12 <- vr_block(x, by = "set", team_select = noi)
  t13 <- vr_block(x, by = "player", team_select = noi)
  ######################
  # TABLE
  y <- plays(x)
  t1 %>% 
      left_join(y %>% 
                    dplyr::select(player_id, player_name) %>% 
                    filter(!is.na(player_id)) %>% 
                    distinct(), by = c("name" = "player_name")) %>% 
    bind_rows(tibble(name = "Team total",
                     player_id = "Team total")) |> 
      left_join(t3, by = "player_id") %>% 
      left_join(t5, by = "player_id") %>%
      left_join(t7, by = "player_id") %>%
      left_join(t9, by = "player_id") %>%
      left_join(t11, by = "player_id") %>%
      left_join(t13, by = "player_id") %>%
      select(-player_id) %>% 
      mutate(across(starts_with("set"), ~replace_na(.x, "-"))) %>% 
      mutate(across(where(is.numeric), ~replace_na(.x, 0))) %>% 
      ### GT TABLE
      gt(id = "four") %>%
      # tab_header(
      #   title = paste0(noi)) %>% 
      tab_spanner(
          label = "Punti",
          columns = Tot.x:`W-L`) %>% 
      tab_spanner(
          label = "Battuta",
          columns = Tot.y:Pos) %>% 
      tab_spanner(
          label = "Ricezione",
          columns = Tot.x.x:`(Exc%)`) %>% 
      tab_spanner(
          label = "Attacco",
          columns = Tot.y.y:`Pts%`) %>% 
      tab_spanner(
          label = "Freeball",
          columns = Tot:Err.y.y) %>%
      tab_spanner(
          label = "Muro",
          columns = Punto) %>%
      cols_label(
          Tot.x = html("<strong>Tot</strong>"),
          Nerr = html("<strong>Err</strong>"),
          `W-L` = html("D"),
          Tot.y = html("<strong>Tot</strong>"),
          Err.x = html("<strong>Err</strong>"),
          Pts.x = html("Pts"),
          Tot.x.x = html("<strong>Tot</strong>"),
          Err.y = html("<strong>Err</strong>"),
          Tot.y.y = html("<strong>Tot</strong>"),
          Err.x.x = html("<strong>Err</strong>"),
          Pts.y = html("Pts"),
          Tot = html("<strong>Tot</strong>"),
          Err.y.y = html("<strong>Err</strong>"),
          Punto = html("Pts")) %>% 
      cols_align(
      align = "center") %>% 
      tab_options(table.width = px(700),
                  row.striping.include_table_body = TRUE) %>% 
      tab_style(style = cell_borders(sides = "left",
                                     color = "grey50",
                                     weight = px(.9),
                                     style = "solid"),
                locations = cells_body(columns = starts_with("To"),
                                       rows = everything())) %>% 
      tab_style(style = cell_borders(sides = "left",
                                     color = "grey50",
                                     weight = px(.9),
                                     style = "solid"),
                locations = cells_body(columns = starts_with("set1"),
                                       rows = everything())) %>% 
      tab_style(style = cell_borders(sides = "left",
                                     color = "grey50",
                                     weight = px(.9),
                                     style = "solid"),
                locations = cells_body(columns = last_col(),
                                       rows = everything())) %>% 
      opt_css(
      css = "
      #four .gt_col_heading {
        padding: 2px 3px;
        font-size: 9px;
      }
       #four .gt_column_spanner {
        padding: 0px 0px;
        font-size: 9px;
      }
      #four .gt_row {
        padding: 2px 3px;
        font-size: 9px;
      }
      #four .gt_col_heading {
        text-align: center !important;
      }
      ") 
}

```

### `r paste0("Team: ", loro)`
```{r}
if(which(x$meta$team$team == loro) == 1){
  t1 <- x$meta$players_h %>% 
    select(number, name, starting_position_set1:starting_position_set5) %>% 
    select(where(~sum(!is.na(.x)) > 0)) %>% 
    rename_with(~str_remove(.x, "starting_position_")) |> 
      filter(if_any(starts_with("set"), ~ . != "-"))

#####################
# POINTS
t2 <- vr_points(x, by = "set", team_select = loro)
t3 <- vr_points(x, by = "player", team_select = loro)
# SERVE
t4 <- vr_serve(x, by = "set", team_select = loro)
t5 <- vr_serve(x, by = "player", team_select = loro)
# RECEPTION
t6 <- vr_reception(x, by = "set", team_select = loro)
t7 <- vr_reception(x, by = "player", team_select = loro)
# ATTACK
t8 <- vr_attack(x, by = "set", team_select = loro)
t9 <- vr_attack(x, by = "player", team_select = loro)
t10 <- vr_freeball(x, by = "set", team_select = loro)
t11 <- vr_freeball(x, by = "player", team_select = loro)
# BLOCK
t12 <- vr_block(x, by = "set", team_select = loro)
t13 <- vr_block(x, by = "player", team_select = loro)
######################
# TABLE
y <- plays(x)
t1 %>% 
    left_join(y %>% 
                  dplyr::select(player_id, player_name) %>% 
                  filter(!is.na(player_id)) %>% 
                  distinct(), by = c("name" = "player_name"))  %>% 
  bind_rows(tibble(name = "Team total",
                   player_id = "Team total")) |> 
    left_join(t3, by = "player_id") %>% 
    left_join(t5, by = "player_id") %>%
    left_join(t7, by = "player_id") %>%
    left_join(t9, by = "player_id") %>%
    left_join(t11, by = "player_id") %>%
    left_join(t13, by = "player_id") %>%
    select(-player_id) %>% 
    mutate(across(starts_with("set"), ~replace_na(.x, "-"))) %>% 
    mutate(across(where(is.numeric), ~replace_na(.x, 0))) %>% 
    ### GT TABLE
    gt(id = "four") %>%
    # tab_header(
    #   title = paste0(noi)) %>% 
    tab_spanner(
        label = "Punti",
        columns = Tot.x:`W-L`) %>% 
    tab_spanner(
        label = "Battuta",
        columns = Tot.y:Pos) %>% 
    tab_spanner(
        label = "Ricezione",
        columns = Tot.x.x:`(Exc%)`) %>% 
    tab_spanner(
        label = "Attacco",
        columns = Tot.y.y:`Pts%`) %>% 
    tab_spanner(
        label = "Freeball",
        columns = Tot:Err.y.y) %>%
    tab_spanner(
        label = "Muro",
        columns = Punto) %>%
    cols_label(
        Tot.x = html("<strong>Tot</strong>"),
        Nerr = html("<strong>Err</strong>"),
        `W-L` = html("D"),
        Tot.y = html("<strong>Tot</strong>"),
        Err.x = html("<strong>Err</strong>"),
        Pts.x = html("Pts"),
        Tot.x.x = html("<strong>Tot</strong>"),
        Err.y = html("<strong>Err</strong>"),
        Tot.y.y = html("<strong>Tot</strong>"),
        Err.x.x = html("<strong>Err</strong>"),
        Pts.y = html("Pts"),
        Tot = html("<strong>Tot</strong>"),
        Err.y.y = html("<strong>Err</strong>"),
        Punto = html("Pts")) %>% 
    cols_align(
    align = "center") %>% 
    tab_options(table.width = px(700),
                row.striping.include_table_body = TRUE) %>% 
    tab_style(style = cell_borders(sides = "left",
                                   color = "grey50",
                                   weight = px(.9),
                                   style = "solid"),
              locations = cells_body(columns = starts_with("To"),
                                     rows = everything())) %>% 
    tab_style(style = cell_borders(sides = "left",
                                   color = "grey50",
                                   weight = px(.9),
                                   style = "solid"),
              locations = cells_body(columns = starts_with("set1"),
                                     rows = everything())) %>% 
    tab_style(style = cell_borders(sides = "left",
                                   color = "grey50",
                                   weight = px(.9),
                                   style = "solid"),
              locations = cells_body(columns = last_col(),
                                     rows = everything())) %>% 
    opt_css(
    css = "
    #four .gt_col_heading {
      padding: 2px 3px;
      font-size: 9px;
    }
     #four .gt_column_spanner {
      padding: 0px 0px;
      font-size: 9px;
    }
    #four .gt_row {
      padding: 2px 3px;
      font-size: 9px;
    }
    #four .gt_col_heading {
      text-align: center !important;
    }
    ") 
} else {
  t1 <- x$meta$players_v %>% 
    select(number, name, starting_position_set1:starting_position_set5) %>% 
    select(where(~sum(!is.na(.x)) > 0)) %>% 
    rename_with(~str_remove(.x, "starting_position_")) |> 
      filter(if_any(starts_with("set"), ~ . != "-"))

#####################
# POINTS
t2 <- vr_points(x, by = "set", team_select = loro)
t3 <- vr_points(x, by = "player", team_select = loro)
# SERVE
t4 <- vr_serve(x, by = "set", team_select = loro)
t5 <- vr_serve(x, by = "player", team_select = loro)
# RECEPTION
t6 <- vr_reception(x, by = "set", team_select = loro)
t7 <- vr_reception(x, by = "player", team_select = loro)
# ATTACK
t8 <- vr_attack(x, by = "set", team_select = loro)
t9 <- vr_attack(x, by = "player", team_select = loro)
t10 <- vr_freeball(x, by = "set", team_select = loro)
t11 <- vr_freeball(x, by = "player", team_select = loro)
# BLOCK
t12 <- vr_block(x, by = "set", team_select = loro)
t13 <- vr_block(x, by = "player", team_select = loro)
######################
# TABLE
y <- plays(x)
t1 %>% 
    left_join(y %>% 
                  dplyr::select(player_id, player_name) %>% 
                  filter(!is.na(player_id)) %>% 
                  distinct(), by = c("name" = "player_name")) %>% 
  bind_rows(tibble(name = "Team total",
                   player_id = "Team total")) |> 
    left_join(t3, by = "player_id") %>% 
    left_join(t5, by = "player_id") %>%
    left_join(t7, by = "player_id") %>%
    left_join(t9, by = "player_id") %>%
    left_join(t11, by = "player_id") %>%
    left_join(t13, by = "player_id") %>%
    select(-player_id) %>% 
    mutate(across(starts_with("set"), ~replace_na(.x, "-"))) %>% 
    mutate(across(where(is.numeric), ~replace_na(.x, 0))) %>% 
    ### GT TABLE
    gt(id = "four") %>%
    # tab_header(
    #   title = paste0(noi)) %>% 
    tab_spanner(
        label = "Punti",
        columns = Tot.x:`W-L`) %>% 
    tab_spanner(
        label = "Battuta",
        columns = Tot.y:Pos) %>% 
    tab_spanner(
        label = "Ricezione",
        columns = Tot.x.x:`(Exc%)`) %>% 
    tab_spanner(
        label = "Attacco",
        columns = Tot.y.y:`Pts%`) %>% 
    tab_spanner(
        label = "Freeball",
        columns = Tot:Err.y.y) %>%
    tab_spanner(
        label = "Muro",
        columns = Punto) %>%
    cols_label(
        Tot.x = html("<strong>Tot</strong>"),
        Nerr = html("<strong>Err</strong>"),
        `W-L` = html("D"),
        Tot.y = html("<strong>Tot</strong>"),
        Err.x = html("<strong>Err</strong>"),
        Pts.x = html("Pts"),
        Tot.x.x = html("<strong>Tot</strong>"),
        Err.y = html("<strong>Err</strong>"),
        Tot.y.y = html("<strong>Tot</strong>"),
        Err.x.x = html("<strong>Err</strong>"),
        Pts.y = html("Pts"),
        Tot = html("<strong>Tot</strong>"),
        Err.y.y = html("<strong>Err</strong>"),
        Punto = html("Pts")) %>% 
    cols_align(
    align = "center") %>% 
    tab_options(table.width = px(900),
                row.striping.include_table_body = TRUE) %>% 
    tab_style(style = cell_borders(sides = "left",
                                   color = "grey50",
                                   weight = px(.9),
                                   style = "solid"),
              locations = cells_body(columns = starts_with("To"),
                                     rows = everything())) %>% 
    tab_style(style = cell_borders(sides = "left",
                                   color = "grey50",
                                   weight = px(.9),
                                   style = "solid"),
              locations = cells_body(columns = starts_with("set1"),
                                     rows = everything())) %>% 
    tab_style(style = cell_borders(sides = "left",
                                   color = "grey50",
                                   weight = px(.9),
                                   style = "solid"),
              locations = cells_body(columns = last_col(),
                                     rows = everything())) %>% 
    opt_css(
    css = "
    #four .gt_col_heading {
      padding: 2px 3px;
      font-size: 9px;
    }
     #four .gt_column_spanner {
      padding: 0px 0px;
      font-size: 9px;
    }
    #four .gt_row {
      padding: 2px 3px;
      font-size: 9px;
    }
    #four .gt_col_heading {
      text-align: center !important;
    }
    ") 
}

```

<br>
<br>
<br>

# Battuta

### Migliori battitori

```{r}
mb <- vr_serve(x, by = "player", team_select = loro) |> 
  mutate(Rate = (Pos + Pts) / Tot) |> 
  arrange(desc(Rate)) |> 
  filter(player_id != "Team total") |> 
  slice_head(n = 3) |> 
  left_join(px, by = "player_id") |> 
  pull(player_number) |> 
  unique()
```

```{epoxy, .transformer = epoxy_transform("collapse")}
Facciamo attenzione a {mb&}.
```

### Peggiori ricevitori

```{r}
pr <- vr_reception(x, by = "player", team_select = loro) |> 
  arrange(desc(Err)) |> 
  filter(player_id != "Team total") |> 
  slice_head(n = 3) |> 
  left_join(px, by = "player_id") |> 
  pull(player_number) |> 
  unique()
```

```{epoxy, .transformer = epoxy_transform("collapse")}
Cerchiamo di battere su: {pr&}.
```

### Direzioni di battuta
```{r}
#| fig-width: 10
#| fig-asp: .6
################################################################################
# Direzione battute
flip <- plays(x) |> 
  filter(team == loro,
         # set_number == 1,
         skill == "Serve")

toflip <- which(flip$start_coordinate_y < 3.5)

flip[toflip, ] <- flip[toflip, ] %>%
  mutate(across(all_of(c("start_coordinate_x", "end_coordinate_x")), dv_flip_x),
         across(all_of(c("start_coordinate_y", "end_coordinate_y")), dv_flip_y))

  flip |> 
  mutate(evaluation2 = case_when(evaluation %in% c("OK, no first tempo possible",
                                                   "Positive, no attack",
                                                   "Positive, opponent some attack") ~ "Positive",
                                 evaluation %in% c("Negative, opponent free attack") ~ "Negative",
                                 TRUE ~ evaluation)) |> 
  filter(evaluation2 != "Error") |> 
  ggplot(aes(start_coordinate_x, start_coordinate_y,
             xend = end_coordinate_x, yend = end_coordinate_y)) +
  geom_segment(arrow = arrow(length = unit(2, "mm"), type = "closed", angle = 20)) +
  scale_colour_manual(values = c(Ace = "darkgreen", Error = "firebrick", 
                                 Positive = "lightgreen", Negative = "orange"),
                      name = "evaluation2") +
  ggcourt(labels = "") +
  facet_grid(cols = vars(player_number),
             rows = vars(evaluation2))
  

p4 <- ggplot(flip, aes(end_coordinate_x, end_coordinate_y)) +
    ggcourt(labels = NULL, court = "lower") +
    geom_point(size = 5)

attack_rate <- flip |> 
  group_by(team, end_zone) |> 
  dplyr::summarize(n_attacks = n()) |>
  mutate(rate = n_attacks/sum(n_attacks)) |> 
  ungroup()
attack_rate <- cbind(attack_rate, dv_xy(attack_rate$end_zone, end = "lower"))
p5 <- ggplot(attack_rate, aes(x, y, fill = rate)) + 
  geom_tile() + 
  ggcourt(labels = NULL, court = "lower") +
  scale_fill_gradient2(low = "white", high = "black") +
  theme(legend.position = "none")

p4 + p5
```



```{r}
# mc_attack <- function(x, team, by = "player", team_select = noi){
#     y <- plays(x)
#     if (by == "player") {
#         y %>% 
#             dplyr::filter(.data$team %in% team_select, 
#                           .data$player_id != "unknown player", 
#                           .data$skill == "Attack") %>% 
#             group_by(.data$player_id) %>%
#             dplyr::summarize(Tot = n(),
#                              Err = sum(.data$evaluation %eq% "Error"),
#                              Blo = sum(.data$evaluation %eq% "Blocked"),
#                              'Pts' = sum(.data$evaluation %eq% "Winning attack"),
#                              'Pts%' = paste0(round(mean(.data$evaluation %eq% "Winning attack"), 2)*100, "%")) %>%
#             bind_rows(
#                 y %>% 
#                     dplyr::filter(.data$team %in% team_select, 
#                                   .data$player_id != "unknown player", 
#                                   .data$skill == "Attack") %>% 
#                     mutate(player_id = "Team total") %>%
#                     group_by(.data$player_id) %>%
#                     dplyr::summarize(Tot = n(),
#                                      Err = sum(.data$evaluation %eq% "Error"),
#                                      Blo = sum(.data$evaluation %eq% "Blocked"),
#                                      'Pts' = sum(.data$evaluation %eq% "Winning attack"),
#                                      'Pts%' = paste0(round(mean(.data$evaluation %eq% "Winning attack"), 2)*100, "%")))
#     } else if (by == "set") {
#         y %>% 
#             dplyr::filter(.data$team %in% team_select, 
#                           .data$player_id != "unknown player", 
#                           .data$skill == "Attack") %>% 
#             group_by(.data$set_number) %>%
#             dplyr::summarize(Tot = n(),
#                              Err = sum(.data$evaluation %eq% "Error"),
#                              Blo = sum(.data$evaluation %eq% "Blocked"),
#                              'Pts' = sum(.data$evaluation %eq% "Winning attack"),
#                              'Pts%' = paste0(round(mean(.data$evaluation %in% "Winning attack"), 2)*100, "%"))
#     } else if (by == "both"){
#       y %>% 
#             dplyr::filter(.data$team %in% team_select, 
#                           .data$player_id != "unknown player", 
#                           .data$skill == "Attack") %>% 
#             group_by(.data$player_id, .data$set_number) %>%
#             dplyr::summarize(Tot = n(),
#                              Err = sum(.data$evaluation %eq% "Error"),
#                              Blo = sum(.data$evaluation %eq% "Blocked"),
#                              'Pts' = sum(.data$evaluation %eq% "Winning attack"),
#                              'Pts%' = paste0(round(mean(.data$evaluation %eq% "Winning attack"), 2)*100, "%")) %>%
#             bind_rows(
#                 y %>% 
#                     dplyr::filter(.data$team %in% team_select, 
#                                   .data$player_id != "unknown player", 
#                                   .data$skill == "Attack") %>% 
#                     mutate(player_id = "Team total") %>%
#                     group_by(.data$player_id, .data$set_number) %>%
#                     dplyr::summarize(Tot = n(),
#                                      Err = sum(.data$evaluation %eq% "Error"),
#                                      Blo = sum(.data$evaluation %eq% "Blocked"),
#                                      'Pts' = sum(.data$evaluation %eq% "Winning attack"),
#                                      'Pts%' = paste0(round(mean(.data$evaluation %eq% "Winning attack"), 2)*100, "%")))
#     }
# }
# mc_reception <- function(x, team, by = "player", file_type = "indoor", team_select = noi){
#     y <- plays(x)
#     if (by == "player"){
#         y %>% 
#             dplyr::filter(.data$team %in% team_select, .data$player_id != "unknown player", 
#                           .data$skill == "Reception") %>% 
#             group_by(.data$player_id) %>%
#             dplyr::summarize(Tot = n(),
#                              Err = sum(.data$evaluation %eq% "Error"),
#                              'Neg%' = paste0(round(mean(.data$evaluation_code %in% c("-", "!", "/")), 2)*100, "%"),
#                              'Pos%' = paste0(round(mean(.data$evaluation_code %in% c("+", "#", "#+")), 2)*100, "%"),
#                              '(Exc%)' = paste0("(", round(mean(.data$evaluation_code %in% c("#")), 2)*100, "%)")) %>%
#             bind_rows(
#                 y %>% 
#                     dplyr::filter(.data$team %in% team_select, .data$player_id != "unknown player", 
#                                   .data$skill == "Reception") %>% 
#                     mutate(player_id = "Team total") %>%
#                     group_by(.data$player_id) %>%
#                     dplyr::summarize(Tot = n(),
#                                      Err = sum(.data$evaluation %eq% "Error"),
#                                      'Neg%' = paste0(round(mean(.data$evaluation_code %in% c("!", "/")), 2)*100, "%"),
#                                      'Pos%' = paste0(round(mean(.data$evaluation_code %in% c("+", "#", "#+")), 2)*100, "%"),
#                                      '(Exc%)' = paste0("(", round(mean(.data$evaluation_code %in% c("#")), 2)*100, "%)")))
#     } else if (by == "set") {
#         y %>% dplyr::filter(.data$team %in% team_select, .data$player_id != "unknown player", .data$skill == "Reception") %>% group_by(.data$set_number) %>%
#             dplyr::summarize(Tot = n(),
#                              Err = sum(.data$evaluation %eq% "Error"),
#                              'Pos%' = paste0(round(mean(.data$evaluation_code %in% c("+", "#", "#+")), 2)*100, "%"),
#                              'Neg%' = paste0(round(mean(.data$evaluation_code %in% c("!", "/")), 2)*100, "%"),
#                              '(Exc%)' = paste0("(", round(mean(.data$evaluation_code %in% c("#")), 2)*100, "%)"))
#     } else if (by == "both"){
#       y %>% 
#             dplyr::filter(.data$team %in% team_select, .data$player_id != "unknown player", 
#                           .data$skill == "Reception") %>% 
#             group_by(.data$player_id, .data$set_number) %>%
#             dplyr::summarize(Tot = n(),
#                              Err = sum(.data$evaluation %eq% "Error"),
#                              'Neg%' = paste0(round(mean(.data$evaluation_code %in% c("-", "!", "/")), 2)*100, "%"),
#                              'Pos%' = paste0(round(mean(.data$evaluation_code %in% c("+", "#", "#+")), 2)*100, "%"),
#                              '(Exc%)' = paste0("(", round(mean(.data$evaluation_code %in% c("#")), 2)*100, "%)")) %>%
#             bind_rows(
#                 y %>% 
#                     dplyr::filter(.data$team %in% team_select, .data$player_id != "unknown player", 
#                                   .data$skill == "Reception") %>% 
#                     mutate(player_id = "Team total") %>%
#                     group_by(.data$player_id, .data$set_number) %>%
#                     dplyr::summarize(Tot = n(),
#                                      Err = sum(.data$evaluation %eq% "Error"),
#                                      'Neg%' = paste0(round(mean(.data$evaluation_code %in% c("!", "/")), 2)*100, "%"),
#                                      'Pos%' = paste0(round(mean(.data$evaluation_code %in% c("+", "#", "#+")), 2)*100, "%"),
#                                      '(Exc%)' = paste0("(", round(mean(.data$evaluation_code %in% c("#")), 2)*100, "%)")))
#     }
# }
# 
# mc_attack(x, noi, by = "both") |> filter(set_number == 1)
# vr_attack(x, noi, by = "set")
# 
# vr_reception(x, noi)
# mc_reception(x, noi, by = "both") |> filter(set_number == 3)
```
